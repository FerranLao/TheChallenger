
const http = require('http');

const app = require('../app');

app.use((req, res, next) => {
  res.status(404).send("not found");
});

app.use((err, req, res, next) => {
  console.error('ERROR', req.method, req.path, err);

  if (!res.headersSent) {
    res.status(500).send("internal server error")
  }
});

const server = http.createServer(app);
const io = require('socket.io')(server);
const challegeNsp = io.of('/challenges')
const invitationNsp = io.of('/invitations')
require("../ws/challenges")(challegeNsp)
require("../ws/invitations")(invitationNsp)

server.on('error', error => {
  if (error.syscall !== 'listen') { throw error }

  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${process.env.PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`Port ${process.env.PORT} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.listen(process.env.PORT, () => {
  console.log(`Listening on http://localhost:${process.env.PORT}`);
});
